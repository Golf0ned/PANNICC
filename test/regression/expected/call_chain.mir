define i64 @first() {
entry:
  ret i64 1
}

define i64 @second() {
entry:
  %0 = alloca i64
  %1 = call i64 @first
  store i64 %1, ptr %0
  %2 = load ptr %0
  %3 = add i64 %2, i64 1
  store i64 %3, ptr %0
  %4 = load ptr %0
  ret i64 %4
}

define i64 @third() {
entry:
  %0 = alloca i64
  %1 = call i64 @second
  store i64 %1, ptr %0
  %2 = load ptr %0
  %3 = add i64 %2, i64 2
  store i64 %3, ptr %0
  %4 = load ptr %0
  ret i64 %4
}

define i64 @fourth() {
entry:
  %0 = alloca i64
  %1 = call i64 @third
  store i64 %1, ptr %0
  %2 = load ptr %0
  %3 = add i64 %2, i64 3
  store i64 %3, ptr %0
  %4 = load ptr %0
  ret i64 %4
}

define i64 @fifth() {
entry:
  %0 = alloca i64
  %1 = call i64 @fourth
  store i64 %1, ptr %0
  %2 = load ptr %0
  %3 = add i64 %2, i64 4
  store i64 %3, ptr %0
  %4 = load ptr %0
  ret i64 %4
}

define i64 @sixth() {
entry:
  %0 = alloca i64
  %1 = call i64 @fifth
  store i64 %1, ptr %0
  %2 = load ptr %0
  %3 = add i64 %2, i64 5
  store i64 %3, ptr %0
  %4 = load ptr %0
  ret i64 %4
}

define i64 @main() {
entry:
  %0 = alloca i64
  store i64 0, ptr %0
  %1 = alloca i64
  %2 = call i64 @first
  store i64 %2, ptr %1
  %3 = load ptr %0
  %4 = load ptr %1
  %5 = add i64 %3, i64 %4
  store i64 %5, ptr %0
  %6 = call i64 @second
  store i64 %6, ptr %1
  %7 = load ptr %0
  %8 = load ptr %1
  %9 = add i64 %7, i64 %8
  store i64 %9, ptr %0
  %10 = call i64 @third
  store i64 %10, ptr %1
  %11 = load ptr %0
  %12 = load ptr %1
  %13 = add i64 %11, i64 %12
  store i64 %13, ptr %0
  %14 = call i64 @fourth
  store i64 %14, ptr %1
  %15 = load ptr %0
  %16 = load ptr %1
  %17 = add i64 %15, i64 %16
  store i64 %17, ptr %0
  %18 = call i64 @fifth
  store i64 %18, ptr %1
  %19 = load ptr %0
  %20 = load ptr %1
  %21 = add i64 %19, i64 %20
  store i64 %21, ptr %0
  %22 = call i64 @sixth
  store i64 %22, ptr %1
  %23 = load ptr %0
  %24 = load ptr %1
  %25 = add i64 %23, i64 %24
  store i64 %25, ptr %0
  %26 = load ptr %0
  ret i64 %26
}
