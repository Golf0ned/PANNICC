define i32 @fun_call() {
entry:
  br label 0

0:
  ret i32 42
}

define i32 @mem2reg_basic() {
entry:
  br label 0

0:
  ret i32 5
}

define i32 @mem2reg_branching() {
entry:
  %0 = call i32 @fun_call
  %1 = sub i32 %0, i32 42
  br i32 %1, label 2, label 3

2:
  br label 5

3:
  %4 = add i32 %0, i32 2
  br label 5

5:
  %6 = phi i32 [ %0, %3 ]
  %7 = phi i32 [ 2, %3 ]
  %8 = phi i32 [ 1, %2 ]
  %9 = phi i32 [ 1, %2 ], [ %4, %3 ]
  %10 = phi i32 [ %4, %3 ]
  br label 11

11:
  ret i32 %9
}

define i32 @mem2reg_while() {
entry:
  br label 0

0:
  %1 = phi i32 [ %15, %13 ]
  %2 = phi i32 [ 1, %13 ]
  %3 = phi i32 [ %11, %13 ]
  %4 = phi i32 
  %5 = phi i32 
  %6 = phi i32 
  %7 = phi i32 [ %8, %13 ]
  %8 = phi i32 [ %15, %13 ], [ 0, %18446744073709551615 ]
  %9 = phi i32 [ %8, %13 ]
  %10 = phi i32 [ %14, %13 ]
  %11 = phi i32 [ %14, %13 ], [ 0, %18446744073709551615 ]
  %12 = sub i32 %8, i32 10
  br i32 %12, label 13, label 16

13:
  %14 = add i32 %11, i32 %8
  %15 = add i32 %8, i32 1
  br label 0

16:
  br label 17

17:
  ret i32 %11
}
