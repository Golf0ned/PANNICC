define i32 @fun_call() {
entry:
  br label 0

0:
  ret i32 0
}

define i32 @mem2reg_basic() {
entry:
  %0 = add i32 1, i32 2
  %1 = sub i32 3, i32 1
  %2 = mul i32 %0, i32 %1
  %3 = and i32 %0, i32 1
  %4 = call i32 @fun_call
  br label 5

5:
  ret i32 %3
}

define i32 @mem2reg_branching() {
entry:
  br i32 0, label 0, label 7

0:
  br i32 1, label 1, label 2

1:
  br label 3

2:
  br label 3

3:
  %4 = phi i32 [ 2, %1 ], [ 3, %2 ]
  %5 = phi i32 [ 2, %1 ]
  %6 = phi i32 [ 3, %2 ]
  br label 8

7:
  br label 8

8:
  %9 = phi i32 [ 4, %3 ], [ 5, %7 ]
  %10 = phi i32 
  %11 = phi i32 [ 4, %3 ]
  %12 = phi i32 
  %13 = phi i32 [ %5, %3 ]
  %14 = phi i32 [ %6, %3 ]
  %15 = phi i32 [ 5, %7 ]
  br label 16

16:
  ret i32 6
}

define i32 @mem2reg_while() {
entry:
  br label 0

0:
  %1 = phi i32 [ 432, %12 ]
  %2 = phi i32 [ %8, %12 ]
  %3 = phi i32 [ 432, %12 ]
  %4 = phi i32 [ %9, %12 ]
  %5 = phi i32 [ %13, %12 ]
  %6 = phi i32 [ 432, %12 ]
  %7 = phi i32 
  %8 = phi i32 [ %13, %12 ], [ 123, %18446744073709551615 ]
  %9 = phi i32 [ %14, %12 ], [ 456, %18446744073709551615 ]
  %10 = phi i32 [ 2, %12 ]
  %11 = phi i32 [ %14, %12 ]
  br i32 %9, label 12, label 15

12:
  %13 = add i32 %8, i32 432
  %14 = sub i32 %9, i32 2
  br label 0

15:
  br i32 %9, label 16, label 17

16:
  br label 18

17:
  br label 18

18:
  %19 = phi i32 [ %9, %16 ]
  %20 = phi i32 [ 987654321, %17 ]
  %21 = phi i32 [ %9, %16 ], [ 987654321, %17 ]
  ret i32 %21
}

define i32 @mem2reg_negative() {
entry:
  %0 = add i32 6, i32 7
  br label 1

1:
  ret i32 %0
}
