define i64 @fun_call() {
entry:
  br label 0

0:
  ret i64 0
}

define i64 @mem2reg_basic() {
entry:
  %0 = add i64 1, i64 2
  %1 = sub i64 3, i64 1
  %2 = mul i64 %0, i64 %1
  %3 = and i64 %0, i64 1
  %4 = call i64 @fun_call
  br label 5

5:
  ret i64 %3
}

define i64 @mem2reg_branching() {
entry:
  br i64 0, label 0, label 5

0:
  br i64 1, label 1, label 2

1:
  br label 3

2:
  br label 3

3:
  %4 = phi i64 [ 2, %1 ], [ 3, %2 ]
  br label 6

5:
  br label 6

6:
  %7 = phi i64 [ 4, %3 ], [ 5, %5 ]
  br label 8

8:
  ret i64 6
}

define i64 @mem2reg_negative() {
entry:
  %0 = add i64 6, i64 7
  br label 1

1:
  ret i64 %0
}
