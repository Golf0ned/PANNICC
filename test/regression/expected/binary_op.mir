define i64 @add() {
entry:
  %0 = alloca i64
  %1 = alloca i64
  store i64 1, ptr %1
  %2 = alloca i64
  store i64 2, ptr %2
  %3 = alloca i64
  %4 = load ptr %1
  %5 = load ptr %2
  %6 = add i64 %4, i64 %5
  store i64 %6, ptr %3
  %7 = load ptr %3
  store i64 %7, ptr %0
  br label 8

8:
  %9 = load ptr %0
  ret i64 %9
}

define i64 @sub() {
entry:
  %0 = alloca i64
  %1 = alloca i64
  store i64 10, ptr %1
  %2 = alloca i64
  store i64 1, ptr %2
  %3 = alloca i64
  %4 = load ptr %1
  %5 = load ptr %2
  %6 = sub i64 %4, i64 %5
  store i64 %6, ptr %3
  %7 = load ptr %3
  store i64 %7, ptr %0
  br label 8

8:
  %9 = load ptr %0
  ret i64 %9
}

define i64 @mul() {
entry:
  %0 = alloca i64
  %1 = alloca i64
  store i64 3, ptr %1
  %2 = alloca i64
  store i64 4, ptr %2
  %3 = alloca i64
  %4 = load ptr %1
  %5 = load ptr %2
  %6 = mul i64 %4, i64 %5
  store i64 %6, ptr %3
  %7 = load ptr %3
  store i64 %7, ptr %0
  br label 8

8:
  %9 = load ptr %0
  ret i64 %9
}

define i64 @bit_and() {
entry:
  %0 = alloca i64
  %1 = alloca i64
  store i64 31, ptr %1
  %2 = alloca i64
  store i64 4, ptr %2
  %3 = alloca i64
  %4 = load ptr %1
  %5 = load ptr %2
  %6 = and i64 %4, i64 %5
  store i64 %6, ptr %3
  %7 = load ptr %3
  store i64 %7, ptr %0
  br label 8

8:
  %9 = load ptr %0
  ret i64 %9
}
