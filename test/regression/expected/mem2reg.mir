define i64 @fun_call() {
entry:
  %0 = alloca i64
  store i64 0, ptr %0
  br label 2

2:
  %3 = load ptr %0
  ret i64 %3
}

define i64 @mem2reg_basic() {
entry:
  %0 = alloca i64
  %1 = alloca i64
  store i64 1, ptr %1
  %2 = alloca i64
  store i64 2, ptr %2
  %3 = alloca i64
  store i64 3, ptr %3
  %4 = alloca i64
  %5 = load ptr %1
  %6 = load ptr %2
  %7 = add i64 %5, i64 %6
  store i64 %7, ptr %4
  %8 = alloca i64
  %9 = load ptr %3
  %10 = load ptr %1
  %11 = sub i64 %9, i64 %10
  store i64 %11, ptr %8
  %12 = alloca i64
  %13 = load ptr %4
  %14 = load ptr %8
  %15 = mul i64 %13, i64 %14
  store i64 %15, ptr %12
  %16 = alloca i64
  %17 = load ptr %4
  %18 = and i64 %17, i64 1
  store i64 %18, ptr %16
  %19 = alloca i64
  %20 = call i64 @fun_call
  store i64 %20, ptr %19
  %21 = load ptr %16
  store i64 %21, ptr %0
  br label 23

23:
  %24 = load ptr %0
  ret i64 %24
}

define i64 @mem2reg_negative() {
entry:
  %0 = alloca i64
  %1 = alloca i64
  %2 = add i64 6, i64 7
  store i64 %2, ptr %1
  %3 = load ptr %1
  store i64 %3, ptr %0
  br label 5

5:
  %6 = load ptr %0
  ret i64 %6
}
