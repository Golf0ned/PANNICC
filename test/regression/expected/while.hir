int while_basic() {
    __entry:
    int val_1;
    int __term;
    __term = 0;
    val_1 = __term;
    __while_cond:
    int __term1;
    __term1 = 1;
    goto_if (__term1) __while_body __while_cont;
    __while_body:
    int __term2;
    __term2 = val_1;
    int __term3;
    __term3 = 2;
    int __bin;
    __bin = __term2 + __term3;
    val_1 = __bin;
    goto __while_cond;
    __while_cont:
    int __term4;
    __term4 = val_1;
    return __term4;
}

int while_complex() {
    __entry:
    int res_1;
    int __term;
    __term = 0;
    res_1 = __term;
    int cond_1;
    int __term1;
    __term1 = 100;
    cond_1 = __term1;
    __while_cond:
    int __term2;
    __term2 = cond_1;
    goto_if (__term2) __while_body __while_cont;
    __while_body:
    int __term3;
    __term3 = res_1;
    int __term4;
    __term4 = 5;
    int __bin;
    __bin = __term3 + __term4;
    res_1 = __bin;
    int __term5;
    __term5 = cond_1;
    int __term6;
    __term6 = 1;
    int __bin1;
    __bin1 = __term5 - __term6;
    cond_1 = __bin1;
    goto __while_cond;
    __while_cont:
    int __term7;
    __term7 = res_1;
    return __term7;
}

int while_empty() {
    __entry:
    __while_cond:
    int __term;
    __term = 0;
    goto_if (__term) __while_body __while_cont;
    __while_body:
    goto __while_cond;
    __while_cont:
    int __term1;
    __term1 = 0;
    return __term1;
}

int while_if() {
    __entry:
    int counter_1;
    int __term;
    __term = 200;
    counter_1 = __term;
    __while_cond:
    int __term1;
    __term1 = 1;
    goto_if (__term1) __while_body __while_cont;
    __while_body:
    int __term2;
    __term2 = counter_1;
    goto_if (__term2) __if_t __if_f;
    __if_t:
    goto __if_cont;
    __if_f:
    int __term3;
    __term3 = 500;
    return __term3;
    __if_cont:
    goto __while_cond;
    __while_cont:
    int __term4;
    __term4 = 0;
    return __term4;
}
